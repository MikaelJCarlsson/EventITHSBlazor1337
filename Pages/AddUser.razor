@page "/adduser"
@using ITHSManagement.Models;
@using ITHSManagement.Data;
@inject StudentRepository sq;

@inject EmployeeService EmployeeService


<h1>Student service</h1>


<form id="studentInfo">

    <div class="container-fluid">
        <div class="row justify-content-start">
            <div class="showUser">
                <label for="firstName">First Name</label>
            </div>
            <div class="col-sm-4">
                <input type="text" id="firstName" @bind-value="student.FirstName" />
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row justify-content-start">
            <div class="showUser">
                <label for="lastName">Last Name</label>
            </div>
            <div class="col-sm-4">
                <input type="text" id="lastName" @bind-value="student.LastName" />
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row justify-content-start">
            <div class="showUser">
                <label for="birthDate">BirthDate &nbsp;</label>
            </div>
            <div class="col-sm-4">
                <input type="date"
                       style="width:211px"
                       id="birthDate"
                       required pattern="[0-9]{4}-[0-9]{2}"
                       @bind-value="student.Birthdate" />
                @*required pattern="\d{4}-\d{2}-\d{2}"*@
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row justify-content-start">
            <div class="showUser">
                <label for="Email">Email</label>
            </div>
            <div class="col-sm-4">
                <input type="text" id="Email" @bind-value="ic.Email" />
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row justify-content-start">
            <div class="showUser">
                <label for="Phone">Phonenumber</label>
            </div>
            <div class="col-sm-4">
                <input type="text" id="Phone" @bind-value="ic.Phone" />
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row justify-content-start">
            <div class="showUser">
                <label for="Street">Street &nbsp;</label>
            </div>
            <div class="col-sm-4">
                <input type="text" id="Street" @bind-value="ic.Street" />
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row justify-content-start">
            <div class="showUser">
                <label for="Zipcode">Zipcode</label>
            </div>
            <div class="col-sm-4">
                <input type="text" id="Zipcode" @bind-value="ic.Zipcode" />
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row justify-content-start">
            <div class="showUser">
                <label for="City">City &nbsp;</label>
            </div>
            <div class="col-sm-4">
                <input type="text" id="City" @bind-value="ic.City" />
            </div>
        </div>
    </div>


    <!--Above code is formated from this.
        <label for="firstName">First Name</label>
    <input type="text" id="firstName" @bind-value="student.FirstName" />
    <br />
    <label for="lastName">Last Name</label>
    <input type="text" id="lastName" @bind-value="student.LastName" />
    <br />
    <label for="birthDate">BirthDate &nbsp;</label>
    <input type="date" id="birthDate" @bind-value="student.Birthdate" />
    <br />-->
    <!-- <button class="btn btn-primary" @onclick="AddStudent">AddStudent</button> -->
    <!--<label for="Email">Email</label>
    <input type="text" id="Email" @bind-value="ic.Email" />
    <br />
    <label for="Phone">Phonenumber</label>
    <input type="text" id="Phone" @bind-value="ic.Phone" />
    <br />
    <label for="Street">Street &nbsp;</label>
    <input type="text" id="Street" @bind-value="ic.Street" />
    <br />
    <label for="Zipcode">Zipcode</label>
    <input type="text" id="Zipcode" @bind-value="ic.Zipcode" />
    <br />
    <label for="City">City &nbsp;</label>
    <input type="text" id="City" @bind-value="ic.City" />-->
    <br />
    <input type="submit" class="btn btn-success" @onclick="AddStudent" />
    <!-- <button class="btn btn-primary" @onclick="AddStudent">AddStudent</button> -->
</form>

@if (studentExcel == null)
{
    <p>Loading...</p>
}
else
{
    <br />
    <br />
    <h3 class="studentList">This list is generated from an excel spreadsheet!</h3>
    <br />
    <table class="table table-striped">
        <thead>
            <tr>
                <th>FirstName</th>
                <th>LastName</th>
                <th>@*BirthDate*@</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var stud in studentExcel)
            {
                <tr>
                    <td>@stud.FirstName</td>
                    <td>@stud.LastName</td>
                    @*<td>@stud.Birthdate</td>*@
                </tr>
            }
        </tbody>
    </table>
}
@code {
    public List<Student> studentExcel = new List<Student>();

    private List<Student> ReadExcel()
    {
        studentExcel = EmployeeService.GetEmployeesFromExcel();
        return studentExcel;
    }

    protected override void OnInitialized()
    {
        ReadExcel();
    }




    public class InputContact
    {
        public string Email { get; set; }
        public string Phone { get; set; }
        public string Street { get; set; }
        public string Zipcode { get; set; }
        public string City { get; set; }
    }

    private InputContact ic = new InputContact();
    private Student student = new Student();


    private void AddStudent()
    {
        int userId = sq.InsertStudent(student);

        if (ic.Email != null)
        {
            ContactInfo ci = new ContactInfo();
            ci.UserId = userId;
            ci.Contact = ic.Email;
            ci.ContactType = ContactTypeEnum.Email;
            sq.InsertContactInfo(ci);
        }
        if (ic.Phone != null)
        {
            ContactInfo ci = new ContactInfo();
            ci.UserId = userId;
            ci.Contact = ic.Phone;
            ci.ContactType = ContactTypeEnum.PhoneNumber;
            sq.InsertContactInfo(ci);
        }
        if (ic.Street != null)
        {
            ContactInfo ci = new ContactInfo();
            ci.UserId = userId;
            ci.Contact = ic.Street;
            ci.ContactType = ContactTypeEnum.Street;
            sq.InsertContactInfo(ci);
        }
    }
}
