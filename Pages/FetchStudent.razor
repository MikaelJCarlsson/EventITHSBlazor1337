@page "/fetchStudent"

@using ITHSManagement.Data
@using ITHSManagement.Models
@inject FetchStudents Fetch
@inject StudentQuerys Context


<h1>Student List</h1>



@if (students == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Birth Date</th>
                <th>User Id</th>
                <th>Delete User</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var s in students)
            {
                <tr>
                    <td>@s.FirstName</td>
                    <td>@s.LastName</td>
                    <td>@s.Birthdate.ToShortDateString()</td>
                    <td>@s.UserId</td>
                    <td><button type="button" class="btn-close" aria-label="Close" @onclick="() => DeleteUser(s)">X</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private IList<Student> students = new List<Student>();

    private async void DeleteUser(Student student)
    {
        Context.DeleteUser(student);
        students = await Fetch.FetchS();

        this.StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        students = await Fetch.FetchS();
    }
}
